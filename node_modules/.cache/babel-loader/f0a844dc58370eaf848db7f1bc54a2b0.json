{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { contactsInitialState } from './functions';\nimport { fetchContacts, addContact, deleteContact } from './operations';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: contactsInitialState,\n  extraReducers: {\n    [fetchContacts.pending](state) {\n      state.isLoading = true;\n    },\n    [fetchContacts.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n    },\n    [fetchContacts.rejected](state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [addContact.pending](state, action) {\n      state.isLoading = true;\n    },\n    [addContact.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n      // state.push({ ...action.payload, id: nanoid() });\n      // localStorage.setItem('setContacts', JSON.stringify(state));\n    },\n\n    [addContact.rejected](state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [deleteContact.pending](state, action) {\n      state.isLoading = true;\n    },\n    [deleteContact.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n      //   const index = state.findIndex(contact => contact.id === action.payload);\n      //   state.splice(index, 1);\n      //   localStorage.setItem('setContacts', JSON.stringify(state));\n    },\n\n    [deleteContact.rejected](state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;\n// export const { fetchContacts, addContact, deleteContact } =\n//   contactsSlice.actions;","map":{"version":3,"names":["createSlice","nanoid","contactsInitialState","fetchContacts","addContact","deleteContact","contactsSlice","name","initialState","extraReducers","pending","state","isLoading","fulfilled","action","error","items","payload","rejected","contactsReducer","reducer"],"sources":["C:/Users/xeb/Documents/GitHub/goit-react-curs/react-hw-07-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\r\nimport { contactsInitialState } from './functions';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: contactsInitialState,\r\n  extraReducers: {\r\n    [fetchContacts.pending](state) {\r\n      state.isLoading = true;\r\n    },\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items = action.payload;\r\n    },\r\n    [fetchContacts.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    [addContact.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [addContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items = action.payload;\r\n      // state.push({ ...action.payload, id: nanoid() });\r\n      // localStorage.setItem('setContacts', JSON.stringify(state));\r\n    },\r\n    [addContact.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    [deleteContact.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [deleteContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items = action.payload;\r\n      //   const index = state.findIndex(contact => contact.id === action.payload);\r\n      //   state.splice(index, 1);\r\n      //   localStorage.setItem('setContacts', JSON.stringify(state));\r\n    },\r\n    [deleteContact.rejected](state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const contactsReducer = contactsSlice.reducer;\r\n// export const { fetchContacts, addContact, deleteContact } =\r\n//   contactsSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACtD,SAASC,oBAAoB,QAAQ,aAAa;AAClD,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AAEvE,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAEN,oBAAoB;EAClCO,aAAa,EAAE;IACb,CAACN,aAAa,CAACO,OAAO,EAAEC,KAAK,EAAE;MAC7BA,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACT,aAAa,CAACU,SAAS,EAAEF,KAAK,EAAEG,MAAM,EAAE;MACvCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACK,KAAK,GAAGF,MAAM,CAACG,OAAO;IAC9B,CAAC;IACD,CAACd,aAAa,CAACe,QAAQ,EAAEP,KAAK,EAAEG,MAAM,EAAE;MACtCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAGD,MAAM,CAACG,OAAO;IAC9B,CAAC;IAED,CAACb,UAAU,CAACM,OAAO,EAAEC,KAAK,EAAEG,MAAM,EAAE;MAClCH,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACR,UAAU,CAACS,SAAS,EAAEF,KAAK,EAAEG,MAAM,EAAE;MACpCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACK,KAAK,GAAGF,MAAM,CAACG,OAAO;MAC5B;MACA;IACF,CAAC;;IACD,CAACb,UAAU,CAACc,QAAQ,EAAEP,KAAK,EAAEG,MAAM,EAAE;MACnCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAGD,MAAM,CAACG,OAAO;IAC9B,CAAC;IAED,CAACZ,aAAa,CAACK,OAAO,EAAEC,KAAK,EAAEG,MAAM,EAAE;MACrCH,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACP,aAAa,CAACQ,SAAS,EAAEF,KAAK,EAAEG,MAAM,EAAE;MACvCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACK,KAAK,GAAGF,MAAM,CAACG,OAAO;MAC5B;MACA;MACA;IACF,CAAC;;IACD,CAACZ,aAAa,CAACa,QAAQ,EAAEP,KAAK,EAAEG,MAAM,EAAE;MACtCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAGD,MAAM,CAACG,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAME,eAAe,GAAGb,aAAa,CAACc,OAAO;AACpD;AACA"},"metadata":{},"sourceType":"module"}