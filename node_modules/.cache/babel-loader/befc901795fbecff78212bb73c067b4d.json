{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// import { contactsInitialState } from './functions';\nimport { fetchContacts, addContact, deleteContact } from './operations';\nconst handlePending = state => {\n  state.isLoading = true;\n};\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  // initialState: contactsInitialState,\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  extraReducers: {\n    [fetchContacts.pending]: handlePending,\n    [fetchContacts.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n    },\n    [fetchContacts.rejected]: handleRejected,\n    [addContact.pending]: handlePending,\n    [addContact.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n      // state.push({ ...action.payload, id: nanoid() });\n      // localStorage.setItem('setContacts', JSON.stringify(state));\n    },\n\n    [addContact.rejected]: handleRejected,\n    [deleteContact.pending](state, action) {\n      state.isLoading = true;\n    },\n    [deleteContact.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n      console.log(state.items);\n      const index = state.contacts.items.findIndex(contact => contact.id === action.payload);\n      state.splice(index, 1);\n      //   localStorage.setItem('setContacts', JSON.stringify(state));\n    },\n\n    [deleteContact.rejected]: handleRejected\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;\n// export const { fetchContacts, addContact, deleteContact } =\n//   contactsSlice.actions;","map":{"version":3,"names":["createSlice","fetchContacts","addContact","deleteContact","handlePending","state","isLoading","handleRejected","action","error","payload","contactsSlice","name","initialState","items","extraReducers","pending","fulfilled","rejected","console","log","index","contacts","findIndex","contact","id","splice","contactsReducer","reducer"],"sources":["C:/Users/xeb/Documents/GitHub/goit-react-curs/react-hw-07-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n// import { contactsInitialState } from './functions';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst handlePending = state => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleRejected = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  // initialState: contactsInitialState,\r\n  initialState: {\r\n    items: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.pending]: handlePending,\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items = action.payload;\r\n    },\r\n    [fetchContacts.rejected]: handleRejected,\r\n\r\n    [addContact.pending]: handlePending,\r\n    [addContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items = action.payload;\r\n      // state.push({ ...action.payload, id: nanoid() });\r\n      // localStorage.setItem('setContacts', JSON.stringify(state));\r\n    },\r\n    [addContact.rejected]: handleRejected,\r\n\r\n    [deleteContact.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [deleteContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n\r\n      state.items = action.payload;\r\n      console.log(state.items);\r\n      const index = state.contacts.items.findIndex(\r\n        contact => contact.id === action.payload\r\n      );\r\n      state.splice(index, 1);\r\n      //   localStorage.setItem('setContacts', JSON.stringify(state));\r\n    },\r\n    [deleteContact.rejected]: handleRejected,\r\n  },\r\n});\r\nexport const contactsReducer = contactsSlice.reducer;\r\n// export const { fetchContacts, addContact, deleteContact } =\r\n//   contactsSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AAEvE,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC7BA,KAAK,CAACC,SAAS,GAAG,IAAI;AACxB,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACF,KAAK,EAAEG,MAAM,KAAK;EACxCH,KAAK,CAACC,SAAS,GAAG,KAAK;EACvBD,KAAK,CAACI,KAAK,GAAGD,MAAM,CAACE,OAAO;AAC9B,CAAC;AAED,MAAMC,aAAa,GAAGX,WAAW,CAAC;EAChCY,IAAI,EAAE,UAAU;EAChB;EACAC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTR,SAAS,EAAE,KAAK;IAChBG,KAAK,EAAE;EACT,CAAC;EACDM,aAAa,EAAE;IACb,CAACd,aAAa,CAACe,OAAO,GAAGZ,aAAa;IACtC,CAACH,aAAa,CAACgB,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAE;MACvCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACS,KAAK,GAAGN,MAAM,CAACE,OAAO;IAC9B,CAAC;IACD,CAACT,aAAa,CAACiB,QAAQ,GAAGX,cAAc;IAExC,CAACL,UAAU,CAACc,OAAO,GAAGZ,aAAa;IACnC,CAACF,UAAU,CAACe,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAE;MACpCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACS,KAAK,GAAGN,MAAM,CAACE,OAAO;MAC5B;MACA;IACF,CAAC;;IACD,CAACR,UAAU,CAACgB,QAAQ,GAAGX,cAAc;IAErC,CAACJ,aAAa,CAACa,OAAO,EAAEX,KAAK,EAAEG,MAAM,EAAE;MACrCH,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACH,aAAa,CAACc,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAE;MACvCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAElBJ,KAAK,CAACS,KAAK,GAAGN,MAAM,CAACE,OAAO;MAC5BS,OAAO,CAACC,GAAG,CAACf,KAAK,CAACS,KAAK,CAAC;MACxB,MAAMO,KAAK,GAAGhB,KAAK,CAACiB,QAAQ,CAACR,KAAK,CAACS,SAAS,CAC1CC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKjB,MAAM,CAACE,OACnC,CAAC;MACDL,KAAK,CAACqB,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MACtB;IACF,CAAC;;IACD,CAAClB,aAAa,CAACe,QAAQ,GAAGX;EAC5B;AACF,CAAC,CAAC;AACF,OAAO,MAAMoB,eAAe,GAAGhB,aAAa,CAACiB,OAAO;AACpD;AACA"},"metadata":{},"sourceType":"module"}