{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchContacts, addContact, deleteContact } from './operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectVisibleContacts } from './selectors';\nimport { wait } from '@testing-library/user-event/dist/utils';\nconst handlePending = state => {\n  state.isLoading = true;\n};\nconst handleRejected = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null\n  },\n  extraReducers: {\n    [fetchContacts.pending]: handlePending,\n    [fetchContacts.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      state.items = action.payload;\n      console.log(state.items);\n    },\n    [fetchContacts.rejected]: handleRejected,\n    [addContact.pending]: handlePending,\n    [addContact.fulfilled](state, action) {\n      console.log(action.payload);\n      console.log(state.items);\n      state.isLoading = false;\n      state.error = null;\n      state.items.push(action.payload);\n    },\n    [addContact.rejected]: handleRejected,\n    [deleteContact.pending](state, action) {\n      state.isLoading = true;\n    },\n    [deleteContact.fulfilled](state, action) {\n      state.isLoading = false;\n      state.error = null;\n      const index = state.items.findIndex(contact => contact.id === action.payload.id);\n      state.items.splice(index, 1);\n    },\n    [deleteContact.rejected]: handleRejected\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;\n// export const { fetchContacts, addContact, deleteContact } =\n//   contactsSlice.actions;","map":{"version":3,"names":["createSlice","fetchContacts","addContact","deleteContact","useSelector","selectContacts","selectVisibleContacts","wait","handlePending","state","isLoading","handleRejected","action","error","payload","contactsSlice","name","initialState","items","extraReducers","pending","fulfilled","console","log","rejected","push","index","findIndex","contact","id","splice","contactsReducer","reducer"],"sources":["C:/Users/xeb/Documents/GitHub/goit-react-curs/react-hw-07-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectContacts, selectVisibleContacts } from './selectors';\r\nimport { wait } from '@testing-library/user-event/dist/utils';\r\n\r\nconst handlePending = state => {\r\n  state.isLoading = true;\r\n};\r\n\r\nconst handleRejected = (state, action) => {\r\n  state.isLoading = false;\r\n  state.error = action.payload;\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    isLoading: false,\r\n    error: null,\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.pending]: handlePending,\r\n    [fetchContacts.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items = action.payload;\r\n      console.log(state.items);\r\n    },\r\n    [fetchContacts.rejected]: handleRejected,\r\n\r\n    [addContact.pending]: handlePending,\r\n    [addContact.fulfilled](state, action) {\r\n      console.log(action.payload);\r\n      console.log(state.items);\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      state.items.push(action.payload);\r\n    },\r\n    [addContact.rejected]: handleRejected,\r\n\r\n    [deleteContact.pending](state, action) {\r\n      state.isLoading = true;\r\n    },\r\n    [deleteContact.fulfilled](state, action) {\r\n      state.isLoading = false;\r\n      state.error = null;\r\n      const index = state.items.findIndex(\r\n        contact => contact.id === action.payload.id\r\n      );\r\n      state.items.splice(index, 1);\r\n    },\r\n    [deleteContact.rejected]: handleRejected,\r\n  },\r\n});\r\nexport const contactsReducer = contactsSlice.reducer;\r\n// export const { fetchContacts, addContact, deleteContact } =\r\n//   contactsSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AACvE,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,aAAa;AACnE,SAASC,IAAI,QAAQ,wCAAwC;AAE7D,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC7BA,KAAK,CAACC,SAAS,GAAG,IAAI;AACxB,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACF,KAAK,EAAEG,MAAM,KAAK;EACxCH,KAAK,CAACC,SAAS,GAAG,KAAK;EACvBD,KAAK,CAACI,KAAK,GAAGD,MAAM,CAACE,OAAO;AAC9B,CAAC;AAED,MAAMC,aAAa,GAAGf,WAAW,CAAC;EAChCgB,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTR,SAAS,EAAE,KAAK;IAChBG,KAAK,EAAE;EACT,CAAC;EACDM,aAAa,EAAE;IACb,CAAClB,aAAa,CAACmB,OAAO,GAAGZ,aAAa;IACtC,CAACP,aAAa,CAACoB,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAE;MACvCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACS,KAAK,GAAGN,MAAM,CAACE,OAAO;MAC5BQ,OAAO,CAACC,GAAG,CAACd,KAAK,CAACS,KAAK,CAAC;IAC1B,CAAC;IACD,CAACjB,aAAa,CAACuB,QAAQ,GAAGb,cAAc;IAExC,CAACT,UAAU,CAACkB,OAAO,GAAGZ,aAAa;IACnC,CAACN,UAAU,CAACmB,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAE;MACpCU,OAAO,CAACC,GAAG,CAACX,MAAM,CAACE,OAAO,CAAC;MAC3BQ,OAAO,CAACC,GAAG,CAACd,KAAK,CAACS,KAAK,CAAC;MACxBT,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClBJ,KAAK,CAACS,KAAK,CAACO,IAAI,CAACb,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACD,CAACZ,UAAU,CAACsB,QAAQ,GAAGb,cAAc;IAErC,CAACR,aAAa,CAACiB,OAAO,EAAEX,KAAK,EAAEG,MAAM,EAAE;MACrCH,KAAK,CAACC,SAAS,GAAG,IAAI;IACxB,CAAC;IACD,CAACP,aAAa,CAACkB,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAE;MACvCH,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBD,KAAK,CAACI,KAAK,GAAG,IAAI;MAClB,MAAMa,KAAK,GAAGjB,KAAK,CAACS,KAAK,CAACS,SAAS,CACjCC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKjB,MAAM,CAACE,OAAO,CAACe,EAC3C,CAAC;MACDpB,KAAK,CAACS,KAAK,CAACY,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC9B,CAAC;IACD,CAACvB,aAAa,CAACqB,QAAQ,GAAGb;EAC5B;AACF,CAAC,CAAC;AACF,OAAO,MAAMoB,eAAe,GAAGhB,aAAa,CAACiB,OAAO;AACpD;AACA"},"metadata":{},"sourceType":"module"}