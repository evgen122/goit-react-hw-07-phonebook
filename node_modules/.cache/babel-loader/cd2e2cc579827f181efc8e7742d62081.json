{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { contactsInitialState } from './functions';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: contactsInitialState,\n  extraReducers: {\n    [addContact.pending](state, action) {\n      state.push({\n        ...action.payload,\n        id: nanoid()\n      });\n      localStorage.setItem('setContacts', JSON.stringify(state));\n    },\n    deleteContact(state, action) {\n      const index = state.findIndex(contact => contact.id === action.payload);\n      state.splice(index, 1);\n      localStorage.setItem('setContacts', JSON.stringify(state));\n    }\n  }\n});\nexport const contactsReducer = contactsSlice.reducer;\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;\n\n// const tasksSlice = createSlice({\n//   name: 'tasks',\n//   initialState: {\n//     items: [],\n//     isLoading: false,\n//     error: null,\n//   },\n//   // Додаємо обробку зовнішніх екшенів\n//   extraReducers: {\n//     [fetchTasks.pending](state, action) {},\n//     [fetchTasks.fulfilled](state, action) {},\n//     [fetchTasks.rejected](state, action) {},\n//   },\n// });\n\n// export const tasksReducer = tasksSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","contactsInitialState","contactsSlice","name","initialState","extraReducers","addContact","pending","state","action","push","payload","id","localStorage","setItem","JSON","stringify","deleteContact","index","findIndex","contact","splice","contactsReducer","reducer","actions"],"sources":["C:/Users/xeb/Documents/GitHub/goit-react-curs/react-hw-07-phonebook/src/redux/contactsSlice.js"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit';\r\nimport { contactsInitialState } from './functions';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: contactsInitialState,\r\n  extraReducers: {\r\n    [addContact.pending](state, action) {\r\n      state.push({ ...action.payload, id: nanoid() });\r\n      localStorage.setItem('setContacts', JSON.stringify(state));\r\n    },\r\n\r\n    deleteContact(state, action) {\r\n      const index = state.findIndex(contact => contact.id === action.payload);\r\n      state.splice(index, 1);\r\n      localStorage.setItem('setContacts', JSON.stringify(state));\r\n    },\r\n  },\r\n});\r\nexport const contactsReducer = contactsSlice.reducer;\r\nexport const { addContact, deleteContact } = contactsSlice.actions;\r\n\r\n// const tasksSlice = createSlice({\r\n//   name: 'tasks',\r\n//   initialState: {\r\n//     items: [],\r\n//     isLoading: false,\r\n//     error: null,\r\n//   },\r\n//   // Додаємо обробку зовнішніх екшенів\r\n//   extraReducers: {\r\n//     [fetchTasks.pending](state, action) {},\r\n//     [fetchTasks.fulfilled](state, action) {},\r\n//     [fetchTasks.rejected](state, action) {},\r\n//   },\r\n// });\r\n\r\n// export const tasksReducer = tasksSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AACtD,SAASC,oBAAoB,QAAQ,aAAa;AAElD,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAEH,oBAAoB;EAClCI,aAAa,EAAE;IACb,CAACC,UAAU,CAACC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAE;MAClCD,KAAK,CAACE,IAAI,CAAC;QAAE,GAAGD,MAAM,CAACE,OAAO;QAAEC,EAAE,EAAEZ,MAAM,CAAC;MAAE,CAAC,CAAC;MAC/Ca,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,CAAC;IAC5D,CAAC;IAEDS,aAAaA,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMS,KAAK,GAAGV,KAAK,CAACW,SAAS,CAACC,OAAO,IAAIA,OAAO,CAACR,EAAE,KAAKH,MAAM,CAACE,OAAO,CAAC;MACvEH,KAAK,CAACa,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MACtBL,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,CAAC;IAC5D;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMc,eAAe,GAAGpB,aAAa,CAACqB,OAAO;AACpD,OAAO,MAAM;EAAEjB,UAAU;EAAEW;AAAc,CAAC,GAAGf,aAAa,CAACsB,OAAO;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}